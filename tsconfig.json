{
  "compilerOptions": {
    // Strictness
    // NOTE - Setup strict mode for project (eslint also use this config to figure out error)
    // https://www.typescriptlang.org/tsconfig#strict
    // https://dev.to/jsdev/strict-mode-typescript-j8p
    "strict": true,
    "verbatimModuleSyntax": true,
    "exactOptionalPropertyTypes": false,
    "noFallthroughCasesInSwitch": true,
    "noImplicitOverride": true,
    "noImplicitReturns": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noPropertyAccessFromIndexSignature": false,
    "noUncheckedIndexedAccess": false,
    // NOTE - This option will skip type checking of declaration files if enable
    // https://www.typescriptlang.org/tsconfig#skipLibCheck
    "skipLibCheck": true,
    // Modules
    // NOTE - Set what module will be built for project (es, commonjs) (what is compile way will be chosen for import / export syntax)
    // https://www.typescriptlang.org/tsconfig#module
    // https://stackoverflow.com/questions/41993811/understanding-target-and-module-in-tsconfig
    "module": "ESNext",
    // NOTE - Set way to system try to find module
    // https://www.typescriptlang.org/tsconfig#moduleResolution
    // https://www.typescriptlang.org/tsconfig#moduleResolution
    // https://www.codementor.io/@elliotaplant/understanding-javascript-module-resolution-systems-with-dinosaurs-il2oqro6e
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "typeRoots": [
      "./node_modules/@types"
    ],
    // Emit
    "lib": [
      "ES2024"
    ],
    // NOTE - Set what target ECMAScript target version (you can easy to think that the target option is used to setup for what compile way for script syntax that exclude import and export)
    // https://www.typescriptlang.org/tsconfig#target
    // https://stackoverflow.com/questions/39493003/typescript-compile-options-module-vs-target
    "target": "ES2024",
    "useDefineForClassFields": false,
    "declaration": true,
    "declarationMap": true,
    "sourceMap": true,
    "importsNotUsedAsValues": "remove",
    // Interop Constraints
    "forceConsistentCasingInFileNames": true,
    // NOTE - Allow you write (import React from "react";) instead of (import * as React from "react";)
    // https://www.typescriptlang.org/tsconfig#allowSyntheticDefaultImports
    "allowSyntheticDefaultImports": true,
    "isolatedModules": true,
    // Composite
    "composite": true,
  },
  "include": [],
  "files": [],
  "exclude": [
    "node_modules",
    "target",
    "dist",
    "lib"
  ],
  "references": []
}
